{#
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link          https://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       https://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var iterable<\{{ entityClass }}> ${{ pluralVar }}
 */
	$this->assign('AppTitle', __('{{ pluralHumanName }} table'));
	//$this->assign('AppSubTitle', __('Recently {{ pluralVar }}'));
	$this->assign('BreadCrumbTitle', __('{{ pluralHumanName }}'));
	$this->assign('AppTitleIcon', 'bi bi-table');
?>
	<div class="{{ pluralVar }} index row">
        <div class="col-md-12">
			<div class="tile shadow">
				<div class="tile-title-w-btn">
					<div class="col-12">
{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
						<?= $this->Html->link('<i class="bi bi-plus-square fs-5 me-2"></i>' . __('Add New'), ['controller' => '{{ pluralHumanName }}', 'action' => 'add'], ['class' => 'btn btn-primary', 'escapeTitle' => false]) ?>
					</div>
				</div>

				<div class="tile-body">
					<div class="table-responsive">
						<table class="table table-striped table-bordered table-hover">
							<thead>
								<tr>
{%- for field in fields %}
									<th><?= $this->Paginator->sort('{{ field }}') ?></th>
									{{- "\n" }}
{%- endfor %}					  
									<th class="actions"><?= __('Actions') ?></th>
								</tr>
							</thead>
							<tbody>
								<?php foreach (${{ pluralVar }} as ${{ singularVar }}): ?>
								<tr>
{% for field in fields %}
{% set isKey = false %}
{% if associations.BelongsTo is defined %}
{% for alias, details in associations.BelongsTo %}
{% if field == details.foreignKey %}
{% set isKey = true %}
									<td><?= ${{ singularVar }}->hasValue('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
{% endif %}
{% endfor %}
{% endif %}
{% if isKey is not same as(true) %}
{% set columnData = Bake.columnData(field, schema) %}
{% if columnData.type starts with 'enum-' %}
									<td><?= ${{ singularVar }}->{{ field }} === null ? '' : h(${{ singularVar }}->{{ field }}->label()) ?></td>
{% elseif columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
									<td><?= h(${{ singularVar }}->{{ field }}) ?></td>
{% elseif columnData.null %}
									<td><?= ${{ singularVar }}->{{ field }} === null ? '' : $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% else %}
									<td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% endif %}
{% endif %}
{% endfor %}
{% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
									<td class="actions">
										<?= $this->Html->link(__('Edit'), ['action' => 'edit', {{ pk|raw }}], ['escape' => false, 'class' => 'me-3']) ?>
										<?= $this->Form->postLink(__('Delete'), ['action' => 'delete', {{ pk|raw }}], ['confirm' => __('Are you sure you want to delete # {0}?', {{ pk|raw }})]) ?>
									</td>
								</tr>
								<?php endforeach; ?>
							</tbody>
						</table>
					</div>
				</div>

				<div class="tile-footer">
					<div class="row">
						<div class="col-5">
							<?= $this->element('ValiAdmin.paginator') ?>
						</div>
						<div class="col-7 text-end">
							<?= $this->element('ValiAdmin.paginator_counter') ?>
						</div>
					</div>
				</div>

			</div>		
